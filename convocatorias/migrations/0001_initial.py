# Generated by Django 5.1.6 on 2025-02-17 23:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Postulacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correo', models.EmailField(max_length=255)),
                ('titulo', models.CharField(max_length=255)),
                ('anio_produccion', models.IntegerField(verbose_name='Año de producción')),
                ('duracion', models.TimeField(help_text='Formato HH:MM', verbose_name='Duración (Min)')),
                ('genero_cortrometraje', models.CharField(choices=[('ficcion', 'Ficción'), ('documental', 'Documental'), ('animacion', 'Animación'), ('experimental', 'Experimental'), ('hibrido', 'Híbrido')], default='ficcion', max_length=20)),
                ('subgenero_cortrometraje', models.CharField(choices=[('drama', 'Drama'), ('comedia', 'Comedia'), ('ciencia_ficcion', 'Ciencia Ficción'), ('ensayo', 'Ensayo'), ('suspenso', 'Suspenso'), ('musical', 'Musical'), ('otro', 'Otro')], default='drama', max_length=20)),
                ('otro_subgenero_cortrometraje', models.CharField(blank=True, max_length=255, null=True)),
                ('formato_grabacion', models.CharField(max_length=255)),
                ('productor_emp_produc', models.CharField(max_length=255, verbose_name='Productor o empresa productora')),
                ('nom_director', models.CharField(max_length=255, verbose_name='Nombre del director')),
                ('sinopsis_corta', models.TextField(verbose_name='Storyline / Sinopsis Corta')),
                ('locaciones_rodaje', models.TextField()),
                ('beneficiario_fdc', models.CharField(choices=[('si', 'Sí'), ('no', 'No')], default='no', max_length=2, verbose_name='El corto ha sido beneficiario de la convocatoria del FDC para cortos')),
                ('anio_fdc', models.PositiveIntegerField(blank=True, null=True, verbose_name='Año del beneficio')),
                ('certificacion_fdc', models.FileField(blank=True, null=True, upload_to='certificaciones/', verbose_name='Certificado del beneficio FDC')),
                ('exhibicion_salas', models.CharField(choices=[('si', 'Sí'), ('no', 'No')], default='no', max_length=2)),
                ('plataformas_exhibicion', models.CharField(choices=[('si', 'Sí'), ('no', 'No'), ('otro', 'Otro')], default='no', max_length=10)),
                ('si_plataforma', models.CharField(blank=True, max_length=255, null=True, verbose_name='¿Cuales plataformas?')),
                ('resolucion_cpn', models.PositiveIntegerField(blank=True, null=True)),
                ('fecha_resolucion_cpn', models.DateField(blank=True, null=True)),
                ('certificacion_cpn', models.FileField(blank=True, null=True, upload_to='certificaciones/')),
                ('acta_clasificacion', models.FileField(blank=True, null=True, upload_to='certificaciones/')),
                ('tipo_persona', models.CharField(choices=[('natural', 'Persona Natural'), ('juridica', 'Persona Jurídica')], default='natural', max_length=10)),
                ('autorizacion_uso', models.FileField(blank=True, null=True, upload_to='autorizaciones/')),
                ('enlace_vimeo', models.URLField(blank=True, max_length=500, null=True, verbose_name='Enlace del corto en Vimeo')),
                ('contrasena_vimeo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contraseña del corto en Vimeo')),
                ('principales_festivales', models.TextField()),
                ('nombre_productor', models.CharField(max_length=255)),
                ('celular_productor', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Número inválido. Use el formato: +573001234567 o 3001234567', regex='^\\+?\\d{1,15}$')], verbose_name='Número de celular del productor')),
                ('domicilio_productor', models.CharField(max_length=255)),
                ('correo_productor', models.EmailField(max_length=255)),
                ('postulado_antes', models.CharField(choices=[('si', 'Sí'), ('no', 'No')], default='no', max_length=2)),
                ('certificacion_cumplimiento', models.FileField(blank=True, null=True, upload_to='certificaciones/')),
                ('acepta_tyc', models.CharField(choices=[('si', 'Sí'), ('no', 'No')], default='no', max_length=2)),
                ('fecha_postulacion', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('evaluacion', 'En Evaluación'), ('rechazado', 'Rechazado'), ('aceptado', 'Aceptado')], default='pendiente', max_length=20)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.TextField(blank=True, null=True, verbose_name='Comentario del evaluador')),
                ('recomendacion', models.CharField(blank=True, choices=[('si', 'Sí'), ('no', 'No'), ('discusion', 'Discusión')], max_length=10, null=True, verbose_name='¿Recomienda el corto para exhibición?')),
                ('fecha_evaluacion', models.DateTimeField(auto_now_add=True)),
                ('evaluador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='convocatorias.evaluador')),
                ('postulacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluaciones', to='convocatorias.postulacion')),
            ],
        ),
        migrations.CreateModel(
            name='PostulacionEvaluadores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='convocatorias.evaluador')),
                ('postulacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='convocatorias.postulacion')),
            ],
            options={
                'db_table': 'convocatorias_postulacion_evaluadores',
            },
        ),
        migrations.CreateModel(
            name='Veredicto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(choices=[('aprobado', 'Aprobado'), ('rechazado', 'Rechazado'), ('discusion', 'En Discusión')], max_length=20)),
                ('comentarios_finales', models.TextField()),
                ('fecha_veredicto', models.DateTimeField(auto_now_add=True)),
                ('postulacion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='convocatorias.postulacion')),
            ],
        ),
    ]
