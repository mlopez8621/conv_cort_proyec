"""
Django settings for conv_cort_proyec project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
import dj_database_url
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Obtener DEBUG desde variable de entorno
DEBUG = os.getenv('DEBUG', 'True') == 'True'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY", "django-insecure-10t(t(6oy^@)yigt49yk!t8(c*qrqjjo27=(4$wnfvqu(_dfp9")


#  ✅ Mantener ALLOWED_HOSTS en variable de entorno
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "127.0.0.1,localhost,convcortproyec-production.up.railway.app").split(",")


# ✅ Asegurar que el dominio de Railway esté incluido en producción
if not os.getenv("DEBUG", "True") == "True":
    ALLOWED_HOSTS.append("convcortproyec-production.up.railway.app")

# ✅ CSRF_TRUSTED_ORIGINS para evitar error CSRF 403
CSRF_TRUSTED_ORIGINS = [f"https://{host}" for host in ALLOWED_HOSTS if host != "localhost"]

# ✅ Cookies seguras solo en producción
CSRF_COOKIE_SECURE = not os.getenv("DEBUG", "True") == "True"
SESSION_COOKIE_SECURE = not os.getenv("DEBUG", "True") == "True"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'convocatorias',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'conv_cort_proyec.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'conv_cort_proyec.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Base de Datos - Alternando entre Local y Railway
if DEBUG:  
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'convocatorias_db',  # Esta línea solo para local
            'USER': 'postgres',  
            'PASSWORD': 'Adm1nCortos',  
            'HOST': 'localhost',  
            'PORT': '5432',  
        }
    }
else:  
    DATABASES = {
        'default': dj_database_url.config(
            default=os.getenv('DATABASE_URL').replace("convocatorias_db", "railway"),
            conn_max_age=600,
            ssl_require=True  
        )
    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es'
USE_L10N = True

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Agrega esta línea si no está

# Si en desarrollo quieres manejar archivos estáticos con Django
if DEBUG:
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Cambia esto si usas otro proveedor
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'automatizacionprocesos@proimagenescolombia.com'  # Reemplaza con tu correo
EMAIL_HOST_PASSWORD = 'zxihgwtvmvyjjieh'  # Usa una contraseña segura o App Password
LOGIN_URL = '/accounts/login/'  # Debe coincidir con la URL de arriba
LOGIN_REDIRECT_URL = '/convocatorias/lista-postulaciones/'  # Redirigir a home después de iniciar sesión
LOGOUT_REDIRECT_URL = '/accounts/login/'  # Redirigir al login al cerrar sesión
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Almacena sesiones en la BD
SESSION_COOKIE_AGE = 3600  # Sesión dura 1 hora (en segundos)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # No expira al cerrar el navegador

X_FRAME_OPTIONS = 'ALLOWALL'

# Archivos Media (subidas de usuarios y PDFs generados)
ON_RAILWAY = os.environ.get('RAILWAY_ENVIRONMENT_NAME') is not None
if ON_RAILWAY:
    MEDIA_ROOT = '/mnt/data/media'  # Usa el volumen adjunto
else:
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Local

MEDIA_URL = '/media/'



